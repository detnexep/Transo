from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

app = FastAPI(title="Simple Translator")

# Enable CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

class TranslationRequest(BaseModel):
    q: str
    source: str = "ar"
    target: str = "bn"

class TranslationResponse(BaseModel):
    translatedText: str

@app.get("/")
async def root():
    return {"message": "Translation API is running!", "status": "active"}

@app.get("/languages")
async def get_languages():
    return [
        {"code": "ar", "name": "Arabic"},
        {"code": "bn", "name": "Bangla"}, 
        {"code": "en", "name": "English"}
    ]

@app.post("/translate")
async def translate_text(request: TranslationRequest):
    # Simple translation simulation
    # In a real app, you'd integrate with a translation service
    arabic_to_bangla_map = {
        "╪и╪│┘Е ╪з┘Д┘Д┘З ╪з┘Д╪▒╪н┘Е┘Ж ╪з┘Д╪▒╪н┘К┘Е": "ржмрж┐рж╕ржорж┐рж▓рзНрж▓рж╛рж╣рж┐рж░ рж░рж╛рж╣ржорж╛ржирж┐рж░ рж░рж╛рж╣рж┐ржо",
        "╪з┘Д╪н┘Е╪п ┘Д┘Д┘З ╪▒╪и ╪з┘Д╪╣╪з┘Д┘Е┘К┘Ж": "рж╕ржорж╕рзНржд ржкрзНрж░рж╢ржВрж╕рж╛ ржЖрж▓рзНрж▓рж╛рж╣рж░ ржЬржирзНржп, ржпрж┐ржирж┐ рж╕ржоржЧрзНрж░ ржмрж┐рж╢рзНржмржЬржЧрждрзЗрж░ ржкрзНрж░рждрж┐ржкрж╛рж▓ржХ",
        "╪з┘Д╪▒╪н┘Е┘Ж ╪з┘Д╪▒╪н┘К┘Е": "ржкрж░ржо ржХрж░рзБржгрж╛ржоржпрж╝, ржЕрждрж┐ ржжржпрж╝рж╛рж▓рзБ",
        "┘Е╪з┘Д┘Г ┘К┘И┘Е ╪з┘Д╪п┘К┘Ж": "ржмрж┐ржЪрж╛рж░ ржжрж┐ржирзЗрж░ ржорж╛рж▓рж┐ржХ",
        "╪е┘К╪з┘Г ┘Ж╪╣╪и╪п ┘И╪е┘К╪з┘Г ┘Ж╪│╪к╪╣┘К┘Ж": "ржЖржорж░рж╛ рждрзЛржорж╛рж░ржЗ ржЗржмрж╛ржжржд ржХрж░рж┐ ржПржмржВ рждрзЛржорж╛рж░ржЗ ржХрж╛ржЫрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржЪрж╛ржЗ",
        "╪з┘З╪п┘Ж╪з ╪з┘Д╪╡╪▒╪з╪╖ ╪з┘Д┘Е╪│╪к┘В┘К┘Е": "ржЖржорж╛ржжрзЗрж░ржХрзЗ рж╕рж░рж▓ ржкрже ржжрзЗржЦрж╛ржУ",
        "╪╡╪▒╪з╪╖ ╪з┘Д╪░┘К┘Ж ╪г┘Ж╪╣┘Е╪к ╪╣┘Д┘К┘З┘Е": "рждрж╛ржжрзЗрж░ ржкрже ржпрж╛ржжрзЗрж░ржХрзЗ рждрзБржорж┐ ржирзЗржпрж╝рж╛ржоржд ржжрж╛ржи ржХрж░рзЗржЫ",
        "╪║┘К╪▒ ╪з┘Д┘Е╪║╪╢┘И╪и ╪╣┘Д┘К┘З┘Е ┘И┘Д╪з ╪з┘Д╪╢╪з┘Д┘К┘Ж": "рждрж╛ржжрзЗрж░ ржкрже ржиржпрж╝, ржпрж╛ржжрзЗрж░ ржкрзНрж░рждрж┐ рждрзЛржорж╛рж░ ржЧржЬржм ржирж╛ржпрж┐рж▓ рж╣ржпрж╝рзЗржЫрзЗ ржПржмржВ ржпрж╛рж░рж╛ ржкржержнрзНрж░рж╖рзНржЯ рж╣ржпрж╝рзЗржЫрзЗ"
    }
    
    # Try to find exact matches first
    for arabic, bangla in arabic_to_bangla_map.items():
        if arabic in request.q:
            return TranslationResponse(translatedText=bangla)
    
    # Fallback: return the text with a note
    return TranslationResponse(
        translatedText=f"ЁЯМЩ ржЕржирзБржмрж╛ржж ржкрж░рж┐рж╖рзЗржмрж╛ рж╕ржХрзНрж░рж┐ржпрж╝\n\nржЖржкржирж╛рж░ ржЖрж░ржмрж┐ ржЯрзЗржХрзНрж╕ржЯ: {request.q[:100]}...\n\nЁЯФз ржЖрж╕рж▓ ржЕржирзБржмрж╛ржж ржЪрж╛рж▓рзБ ржХрж░рждрзЗ ржЖржорж╛ржжрзЗрж░ ржПржХржЯрж┐ ржЕржирзБржмрж╛ржж рж╕рж╛рж░рзНржнрж╛рж░ рж╕ржВржпрзБржХрзНржд ржХрж░рждрзЗ рж╣ржмрзЗред"
    )

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)